=>Data types (Base on Version 8.0)

*Numeric Data Types ( types)

Data Types                                  Description

1. BIT(size)                                from 1 to 64.th edefault value for size is 1.

2. BOOL = same boolean                      Zero is considered as False.Nonzero vlaues are considered as True.
3. BOOLEAN                                  Equal to BOOL

4. TINYINT(size)                            A very small interger .Signed range is -128 to 127.unsigned value is 0 to 155.
5. SMALLINT(size)                           A small interger.Signed range is  -32768 t 32767. unsigned value is 0 to 65535.
6. MEDIUMINT(size)                          A medium interger.Signed range is  -8388808 t 8388807. unsigned value is 0 to 16777215.
7. INT                                      Signed range is from -214748648 to 214748647.unsigned value is 0 to 4294967295.
8. INTERGER(size)
9.BITINT(size) > INTERGER = INT

10. DECIMAL(size,d) d = decimal point      An exact fixed point number. The default value for d is 0.eg.(999.99)is 5 digits  and 2 decimal digits 

11. DEC(size,d)                            Equal to decimal(size,d)
12. FLOAT(size,d)                          A floating Point Number(approximate value)
13. FLOAT(p)                               A floating Point Number(approximate value).p is optonal.p is from 0 to 24
14. DOUBLE(size,d)                         P is optional.p is from 24 to 53.

NOTE : DECIMAL for finance (such as money)
       FLOAT & DOUBLE for science app 

-------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS items(
       name VARCHAR(20),
       price INT(11),
       status BOOL
);


DESC items;

INSERT INTO items(name,price)
VALUES('water',100),
('coffee',500),
('cake',800),
('snack',250.56),
('jam',1000);

SELECT * FROM items;

INSERT INTO items(name,price,status)
VALUES('water',100,0),
('coffee',500,1),
('cake',800,0),
('snack',250.56,1),
('jam',1000,0);

SELECT * FROM items;

INSERT INTO items(name,price,status)
VALUES('water',100,0),
('coffee',-500,1),
('cake',-800,0),
('snack',-250.56,1),
('jam',1000,0);

SELECT * FROM items;

DROP TABLE IF EXISTS items;

CREATE TABLE IF NOT EXISTS items(
       name VARCHAR(20),
       purchaseprice INT(4) SIGNED,
       sellprice INT(4) UNSIGNED,
       status BOOL
);

DESC items;

INSERT INTO items(name,purchaseprice,sellprice,status)
VALUES('water',900,9500,0),
('coffee',-500,200,1),
('cake',800,1000,0),
('snack',-250.56,350.77,1),
('jam',1000,2000,0);

SELECT * FROM items;

INSERT INTO items(name,purchaseprice,sellprice,status)
VALUES('water',10000,-11000,0),
('coffee',-100,200,1);
--------------------------------------

  number data type 

  integer       fixed point    VS   floating point
  INTEGER       DECIMAL             FLOAT/DOUBLE 

  DECIMAL(5,2)     DECIMAL(Total Number of digits, Digits after decimal)
  eg(999.99) is 5 digits and 2 decimal digits 

  fixed-point data type 
  DECIMAL(5,3) = 20.234  (digit,decimal);
  20.5 = 20.500 
  28.543235778 = 20.523 (WARNING)

  DROP TABLE IF EXISTS items;

  CREATE TABLE IF NOT EXISTS items(
       name VARCHAR(20)
       price DECIMAL(6,2)
  );

  DESC items;

  INSERT INTO items(name,price)
  VALUE('water',500);

  *result 500,00 
  SELECT * FROM items;

  INSERT INTO items(name,price)
  VALUE('coffee',100.43);

  SELECT * FROM items;

*result 1000.01;
  INSERT INTO items(name,price)
  VALUE('redbull',1000.01);

  SELECT * FROM items;

 *result 1000.99
  INSERT INTO items(name,price)
  VALUE('redbull',1000.99);

  SELECT * FROM items;

  *result 1000.99
  INSERT INTO items(name,price)
  VALUE('redbull',1000.994);

  SELECT * FROM items;

*result 1001.00
  INSERT INTO items(name,price)
  VALUE('redbull',1000.9948);

  SELECT * FROM items;

*result 1001.00
  INSERT INTO items(name,price)
  VALUE('redbull',1000.998);

  SELECT * FROM items;

  *result 1000.35
  INSERT INTO items(name,price)
  VALUE('redbull',1000.345);

  SELECT * FROM items;

   *result 550.99
  INSERT INTO items(name,price)
  VALUE('redbull',550.9999);

  SELECT * FROM items;

  *result 1000.00
  INSERT INTO items(name,price)
  VALUE('redbull',1000);

  SELECT * FROM items;

  *result error
  INSERT INTO items(name,price)
  VALUE('redbull',100000);

  SELECT * FROM items;

  ------------------------------------

FLOAT() VS DOUBLE()

Note : DECIMAL data type is a fixed-point type and calculate are exact 
Note : FLOAT & DOUBLE data type are floating-point types and calculate are approximate.

CREATE TABLE IF NOT EXISTS shoppings(
       name VARCHAR(20),
       purchaseprice FLOAT,
       sellprice FLOAT(4)
);

DESC shoppings;

INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('water',100,100),
('coffee',500,500.344),
('cake',800,800.56),
('snack',250,250.889),
('jam',9000,10000);

SELECT * FROM shoppings;

*result = 112233
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('brands birdnest',112233.45,112233.45);

*result = 11223300
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('brands birdnest',11223344.45,11223344.45);

SELECT * FROM shoppings;

*result = 1122330000
INSERT INTO shoppings(name,purchaseprice,sellprice)
VALUES('brands birdnest',1122334455.45,1122334455.45);

---------------------------------------

=>FLOAT VS DOUBLE 
CREATE TABLE IF NOT EXISTS buyings(
  name VARCHAR(20),
  purchaseprice FLOAT,
  sellprice DOUBLE
);

DESC buyings;

INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('water',100,100),
('coffee',500.34,500.344),
('cake',800.56,800.56),
('snack',250.889,250.889),
('jam',10000,10000);

SELECT * FROM buyings;

*result = 112233.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('brands birdnest',112233.45,112233.45);

*result = 11223344.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('brands birdnest',11223344.45,11223344.45);

*result = 1122334455.45
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('brands birdnest',1122334455.45,1122334455.45);

*result = 112233e15 1122334455667788.5
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('brands birdnest',1122334455667788.45,1122334455667788.45);

*result = 112233e17 11223344556677889e17
INSERT INTO buyings(name,purchaseprice,sellprice)
VALUES('brands birdnest',112233445566778899.45,112233445566778899.45);

SELECT * FROM buyings;

=> ABOUT e/E HTML WRITE 

HTML input number type allow 'e/E' buz 'e' stands form exponential(exponent) which is a numeric symbol.
Eg, 200000 can also can be written as 2e5 , (3e4 = 3x10^4 = 30000)
^ = hat  (call CARET or HAT);







   