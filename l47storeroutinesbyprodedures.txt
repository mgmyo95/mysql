=> Stored Routines
(i) PROCEDURE (we can call stored procedures)
	(a)IN = Input Parameters
	(b)OUT = Output Parameters
	(d)INOUT = Inout Parameters

(ii)FUNCTION
	(a)Build In Function
	(b)User Define Function
		(i)Input Parameters (fuction always return only 1 value./ function can be with parameter or not )

------------------------------

CREATE TABLE IF NOT EXISTS capitals(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	date DATE NOT NULL,
	name VARCHAR(50) NOT NULL,
	amount DECIMAL(10,2) NOT NULL,
	payment ENUM('MMK','USD') NOT NULL,
	accounts ENUM('credit','debit') NOT NULL
);
DESC capitals;		

INSERT INTO capitals(date,name,amount,payment,accounts)
VALUES('2023/1/20','mr.tin',500000,1,1),
('2023/1/31','ms.july',300000,1,1),
('2023/2/1','ms.july',200000,1,1),
('2023/2/1','mr.tin',1000,2,1),
('2023/2/2','ms.july',3000,2,1),
('2023/2/3','ms.july',1000,2,1),
('2023/2/4','ms.july',1000,2,1),
('2023/2/28','ms.july',200000,1,2);

SELECT * FROM capitals;


=>capital by MMK
SELECT name,SUM(amount), payment,accounts FROM capitals
WHERE accounts = 'credit' AND payment = "MMK"
GROUP BY name;

=>capital by USD
SELECT name,SUM(amount), payment,accounts FROM capitals
WHERE accounts = 'credit' AND payment = "USD"
GROUP BY name;	



CREATE OR REPLACE VIEW vw_capitalbymmk AS
SELECT name,SUM(amount), payment,accounts FROM capitals
WHERE accounts = 'credit' AND payment = "MMK"
GROUP BY name;

CREATE OR REPLACE VIEW vw_capitalbyusd AS
SELECT name,SUM(amount), payment,accounts FROM capitals
WHERE accounts = 'credit' AND payment = "USD"
GROUP BY name;

SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';

SELECT * FROM vw_capitalbymmk;
SELECT * FROM vw_capitalbyusd;

--------------------------------

=>Capital By Account

SELECT date,name,amount,payment,accounts
FROM capitals
WHERE accounts = "credit"
ORDER BY date DESC;

SELECT date,name,amount,payment,accounts
FROM capitals
WHERE accounts = "debit"
ORDER BY date DESC;

DELIMITER //

	CREATE PROCEDURE capitalreportaccounts_proc(p_acc VARCHAR(10))
	BEGIN
		SELECT date,name,amount,payment,accounts
		FROM capitals
		WHERE accounts = p_acc
		ORDER BY date DESC;
	END; //

DELIMITER ;

=>SHOW TABLES
=>SHOW FULL TABLES

=>List all procedures
SHOW PROCEDURE STATUS WHERE DB = "wdf8023"

=>Drop procedures
DROP PROCEDURE IF EXISTS capitalreportaccounts_proc;


*error
CALL capitalreportaccounts_proc(); 


CALL capitalreportaccounts_proc('credit');
CALL capitalreportaccounts_proc('debit'); 

----------------------------------------------
SELECT date,name,amount,payment,accounts
		FROM capitals		
		WHERE date = "2023-02-02";


DELIMITER //

	CREATE PROCEDURE capitalreportdate_proc(p_date DATE)
	BEGIN
		SELECT date,name,amount,payment,accounts
		FROM capitals
		WHERE date = p_date
		ORDER BY date DESC;
	END; //

DELIMITER ;

*=(these are equal)

DELIMITER //

	CREATE PROCEDURE capitalreportdate_proc(IN p_date DATE)
	BEGIN
		SELECT date,name,amount,payment,accounts
		FROM capitals
		WHERE date = p_date
		ORDER BY date DESC;
	END; //

DELIMITER ;

CALL capitalreportdate_proc('2023-2-3');
CALL capitalreportdate_proc('2023-2-1');

------------------------

=> Input and Output Parameters

SELECT * FROM customers;

SELECT COUNT(*) FROM customers
WHERE city = 'bago';

DELIMITER //

	CREATE PROCEDURE totalcureportbycity_proc(IN p_city VARCHAR(50),OUT p_totalcu INT)
		BEGIN
			SELECT COUNT(*) INTO p_totalcu
			FROM customers
			WHERE city = p_city;

		END;//

DELIMITER ;

SET @totalcustomers := 0;
SELECT @totalcustomers;
CALL totalcureportbycity_proc('bago',@totalcustomers);
SELECT @totalcustomers;

SHOW PROCEDURE STATUS WHERE DB = "wdf009";
--------------------------------

=> IN/ OUT & INOUT Parameters

SELECT * FROM customers;

SELECT firstname,lastname,amount,city FROM customers;

SELECT MIN(amount),MAX(amount), city FROM customers WHERE city='yangon';

DELIMITER //

	CREATE PROCEDURE minmaxcubycity_proc(
		IN p_city VARCHAR(50),
		OUT p_minamount INT,
		OUT p_maxamount INT
	)
	BEGIN
		SELECT MIN(amount),MAX(amount)
		INTO p_minamount,p_maxamount
		FROM customers
		WHERE city=p_city;
	END;//
DELIMITER ;


SET @min := 0;
@max := 0;
SELECT @min,@max;

CALL minmaxcubycity_proc('bago',@min,@max);
SELECT @min,@max;
SELECT (@max-@min) AS different;

---------------------------------

=>IN / OUT & INOUT Parameters

SELECT * FROM customers;

SELECT MIN(age),MAX(age),city FROM customers
WHERE city = "yangon";

DELIMITER //

	CREATE PROCEDURE minmaxcuagebycity_proc(
		INOUT p_city VARCHAR(50),
		OUT p_minage INT,
		OUT p_maxage INT
	)
	BEGIN
		SELECT MIN(age),MAX(age)
		INTO p_minage,p_maxage
		FROM customers
		WHERE city = p_city;
	END;//
DELIMITER ;

SET @city := "yangon",
@min := 0,
@max := 0;
SELECT @city,@min,@max;

CALL minmaxcuagebycity_proc(@city,@min,@max);
SELECT @city,@min,@max;
SELECT (@max - @min) AS different;


