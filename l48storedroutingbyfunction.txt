=> Stored Routines
(i) PROCEDURE (we can call stored procedures)
	(a)IN = Input Parameters
	(b)OUT = Output Parameters
	(d)INOUT = Inout Parameters

(ii)FUNCTION
	(a)Build In Function
	(b)User Define Function
		(i)Input Parameters (fuction always return only 1 value./ function can be with parameter or not )

------------------------------ 
=>(ii)FUNCTION (b) User Define Function 

SELECT * FROM products;
SELECT * FROM checkout;  

SELECT products.name,products.price,.checkout.qty,(products.price * checkouts.qty) AS totalamount FROM checkouts 
LEFT JOIN products 
ON checkouts.product_id = products.id; 

=Total amount

SELECT SUM(products.price * checkouts.qty) AS totalamount FROM checkouts
LEFT JOIN products 
ON checkout.product_id = products.id; 

DELIMITER // 

    CREATE FUNCTION totalamount_fun()
    RETURNS DECIMAL DETERMINISTIC
        BEGIN 
            DECLARE result DECIMAL;
            SELECT SUM(products.price * checkouts.qty)
            INTO result 
            FROM checkouts 
            LEFT JOIN products 
            ON checkouts.product_id = products.id;
            RETURN result;
        END;//

DELIMITER ;

=>List All function
SHOW FUNCTION STATUS WHERE DB = "wdf009";
SELECT USER();
SELECT totalamount_fun();

=>DROP FUNCTION 
DROP FUNCTION IF EXISTS totalamount_fun;

------------------------------------------------

=>With Parameter (Single Parameter) 
=Total Amount by Product id 

SELECT SUM(products.price * checkouts.qty) AS totalamount FROM checkouts
LEFT JOIN products 
ON checkouts.product_id = products.id
WHERE products.id = 1;

DELIMITER // 

    CREATE FUNCTION totalamountbyproductid_fun(p_productid INT)
    RETURNS DECIMAL DETERMINISTIC
        BEGIN 
            DECLARE totalamount DECIMAL;
            SELECT SUM(products.price * checkouts.qty) INTO totalamount FROM checkouts
            LEFT JOIN products 
            ON checkouts.product_id = products.id
            WHERE products.id = p_productid;
            RETURN totalamount;
        END;//

DELIMITER ;

=>List All function
SHOW FUNCTION STATUS WHERE DB = "wdf009";
SELECT USER();

*error
SELECT totalamountbyproductid_fun();

SELECT totalamountbyproductid_fun(1);
SELECT totalamountbyproductid_fun(2);
SELECT totalamountbyproductid_fun(3);

=>DROP FUNCTION 
DROP FUNCTION IF EXISTS totalamountbyproductid_fun;

-----------------------------------------------

=>With Parameter (Multi Parameter) 
=Total Amount by Product id AND Payment 

SELECT SUM(products.price * checkouts.qty) AS totalamount FROM checkouts
LEFT JOIN products 
ON checkouts.product_id = products.id
WHERE products.id = 2 AND checkouts.payment = 'cod';

DELIMITER // 

    CREATE FUNCTION totalamountbypayment_fun(p_productid INT,p_payment VARCHAR(4))
    RETURNS DECIMAL DETERMINISTIC
        BEGIN 
            DECLARE totalamount DECIMAL;
            SELECT SUM(products.price * checkouts.qty) AS totalamount
            INTO totalamount
            FROM checkouts
            LEFT JOIN products 
            ON checkouts.product_id = products.id
            WHERE products.id = p_productid AND checkouts.payment = p_payment;
            RETURN totalamount;
        END;//

DELIMITER ;

=>List All function
SHOW FUNCTION STATUS WHERE DB = "wdf009";
SELECT USER();

*error
SELECT totalamountbypayment_fun();

SELECT totalamountbypayment_fun(1,'MPU');
SELECT totalamountbypayment_fun(2,'VISA');
SELECT totalamountbypayment_fun(3,'COD');

=>DROP FUNCTION 
DROP FUNCTION IF EXISTS totalamountbypayment_fun;

----------------------------------------------- 

2FN